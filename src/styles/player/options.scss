.popup-container {
  display: flex;
  justify-content: center;
  align-items: center;

	position: fixed;
	left: 0px;
	top: 0px;
	right: 0px;
  bottom: 0px; 
  z-index: 999999; // gotta be on top
  pointer-events: none;

  & > * {
    pointer-events: auto;
  }

  & code {
    font-family: monospace;
  }

  & span.spacer {
    width: 1em;
    height: 1em;

    &::before {
      content: " ";
    }
  }
}

.popup {
  background: #fff;
  color: #000;
	box-shadow: 0 0 20px 0px #000;
	text-align: center;
	overflow: auto;
	cursor: pointer;
  animation: zoom .4s forwards ease 1;
  
  width: fit-content;
  height: fit-content;
  padding: 1em;

  border-radius: 2px;

  position: relative;

  & > span.close-button {
    position: absolute;
    right: -9px;
    top: 0px;
    color: #888;
    width: 1em;
    height: 1em;
    font-family: monospace;
    font-weight: bolder;
    font-size: 14px;

    &::before{
      content: "x";
    }
  }
}

@keyframes zoom {
	from { opacity:0; transform:translateY(100%) scale(0); }
}

@mixin grid-selector($selectors) {
  $selector: ();
  @each $value in $selectors {
    $sel: unquote("& > #{$value}, & .subgrid > #{$value}");
    $selector: append($selector, $sel, comma);
  }
  #{$selector} {
    @content
  }
}

.options {
  display: grid;
  grid-template-columns: [opt-name button-start] 5fr [opt-value] 1fr [button-end];
  place-content: center;
  gap: 5px 5px;

  & .subgrid { // workaround until display:subgrid becomes supported
    display: grid;
    grid-template-columns: inherit;
    place-content: inherit;
    gap: inherit;

    width: 100%;
  }

  @include grid-selector( 'span:not(.close-button)' ) {
    grid-column: opt-name;
    justify-self: right;
  }
  @include grid-selector( 'input' 'select' ) {
    grid-column: opt-value;
    justify-self: left;

    transition: all .25s;
    &:disabled {
      transition: all .25s;
    }
  }
  @include grid-selector( '*' 'input[type="submit"]' ) {
    grid-column: button-start / button-end;
    justify-self: center;
  }

  & > div.no-options-avaliable {
    color: #888;

    &::before {
      content: "No options avaliable at this time.";
    }
  }

  & .disableable {
    transition: color .25s;

    &.disabled { 
      color: #888;
      transition: color .25s;
    }
  }
}